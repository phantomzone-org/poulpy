use crate::tfhe::bdd_arithmetic::{BitCircuit, BitCircuitInfo, Circuit, GetBitCircuitInfo, Node};
pub(crate) enum AnyBitCircuit {
    B0(BitCircuit<12>),
    B1(BitCircuit<18>),
    B2(BitCircuit<24>),
    B3(BitCircuit<30>),
    B4(BitCircuit<36>),
    B5(BitCircuit<42>),
    B6(BitCircuit<48>),
    B7(BitCircuit<54>),
    B8(BitCircuit<60>),
    B9(BitCircuit<66>),
    B10(BitCircuit<72>),
    B11(BitCircuit<78>),
    B12(BitCircuit<84>),
    B13(BitCircuit<90>),
    B14(BitCircuit<96>),
    B15(BitCircuit<102>),
    B16(BitCircuit<108>),
    B17(BitCircuit<114>),
    B18(BitCircuit<120>),
    B19(BitCircuit<126>),
    B20(BitCircuit<132>),
    B21(BitCircuit<138>),
    B22(BitCircuit<144>),
    B23(BitCircuit<150>),
    B24(BitCircuit<156>),
    B25(BitCircuit<162>),
    B26(BitCircuit<168>),
    B27(BitCircuit<174>),
    B28(BitCircuit<180>),
    B29(BitCircuit<186>),
    B30(BitCircuit<192>),
    B31(BitCircuit<192>),
}
impl BitCircuitInfo for AnyBitCircuit {
    fn info(&self) -> (&[Node], usize) {
        match self {
            AnyBitCircuit::B0(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B1(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B2(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B3(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B4(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B5(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B6(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B7(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B8(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B9(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B10(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B11(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B12(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B13(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B14(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B15(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B16(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B17(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B18(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B19(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B20(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B21(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B22(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B23(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B24(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B25(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B26(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B27(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B28(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B29(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B30(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
            AnyBitCircuit::B31(bit_circuit) => (bit_circuit.nodes.as_ref(), bit_circuit.max_inter_state),
        }
    }
}

impl GetBitCircuitInfo<u32> for Circuit<AnyBitCircuit, 32usize> {
    fn input_size(&self) -> usize {
        2 * u32::BITS as usize
    }
    fn output_size(&self) -> usize {
        u32::BITS as usize
    }
    fn get_circuit(&self, bit: usize) -> (&[Node], usize) {
        self.0[bit].info()
    }
}

pub(crate) static OUTPUT_CIRCUITS: Circuit<AnyBitCircuit, 32usize> = Circuit([
    AnyBitCircuit::B0(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(0, 1, 0),
            Node::Copy,
            Node::Cmux(36, 0, 1),
            Node::Copy,
            Node::Cmux(35, 0, 1),
            Node::Copy,
            Node::Cmux(34, 0, 1),
            Node::Copy,
            Node::Cmux(33, 0, 1),
            Node::Cmux(32, 0, 1),
            Node::None,
        ],
        2,
    )),
    AnyBitCircuit::B1(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(1, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Copy,
            Node::Cmux(36, 0, 2),
            Node::Cmux(36, 0, 1),
            Node::Copy,
            Node::Cmux(35, 0, 2),
            Node::Cmux(35, 0, 1),
            Node::Copy,
            Node::Cmux(34, 0, 2),
            Node::Cmux(34, 0, 1),
            Node::Cmux(33, 0, 2),
            Node::None,
            Node::Cmux(33, 0, 1),
            Node::Cmux(32, 2, 0),
            Node::None,
            Node::None,
        ],
        3,
    )),
    AnyBitCircuit::B2(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(2, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Copy,
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 0, 1),
            Node::Cmux(36, 0, 2),
            Node::Copy,
            Node::Cmux(35, 0, 3),
            Node::Cmux(35, 0, 2),
            Node::Cmux(35, 0, 1),
            Node::Copy,
            Node::Cmux(34, 0, 1),
            Node::Cmux(34, 0, 3),
            Node::Cmux(34, 0, 2),
            Node::Cmux(33, 2, 3),
            Node::Cmux(33, 0, 1),
            Node::None,
            Node::None,
            Node::Cmux(32, 1, 0),
            Node::None,
            Node::None,
            Node::None,
        ],
        4,
    )),
    AnyBitCircuit::B3(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(0, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Copy,
            Node::Cmux(36, 0, 1),
            Node::Cmux(36, 0, 4),
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 0, 2),
            Node::Copy,
            Node::Cmux(35, 0, 1),
            Node::Cmux(35, 0, 4),
            Node::Cmux(35, 0, 3),
            Node::Cmux(35, 0, 2),
            Node::Cmux(34, 0, 3),
            Node::Cmux(34, 0, 2),
            Node::None,
            Node::Cmux(34, 0, 1),
            Node::Cmux(34, 0, 4),
            Node::None,
            Node::Cmux(33, 3, 1),
            Node::Cmux(33, 4, 0),
            Node::None,
            Node::None,
            Node::Cmux(32, 1, 2),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        5,
    )),
    AnyBitCircuit::B4(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(4, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Copy,
            Node::Cmux(36, 0, 5),
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 0, 4),
            Node::Cmux(36, 0, 2),
            Node::Cmux(36, 0, 1),
            Node::Copy,
            Node::Cmux(35, 0, 3),
            Node::Cmux(35, 0, 2),
            Node::Cmux(35, 0, 4),
            Node::Cmux(35, 0, 5),
            Node::Cmux(35, 0, 1),
            Node::None,
            Node::None,
            Node::Cmux(34, 3, 4),
            Node::Cmux(34, 0, 5),
            Node::Cmux(34, 0, 1),
            Node::Cmux(34, 0, 2),
            Node::Cmux(33, 3, 4),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 5, 2),
            Node::None,
            Node::Cmux(32, 0, 4),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        6,
    )),
    AnyBitCircuit::B5(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(5, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Copy,
            Node::Cmux(36, 0, 2),
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 0, 1),
            Node::Cmux(36, 0, 5),
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 0, 4),
            Node::Copy,
            Node::Cmux(35, 0, 1),
            Node::Cmux(35, 0, 5),
            Node::Cmux(35, 0, 6),
            Node::Cmux(35, 0, 2),
            Node::Cmux(35, 0, 3),
            Node::Cmux(35, 0, 4),
            Node::Cmux(34, 1, 5),
            Node::Cmux(34, 4, 3),
            Node::Cmux(34, 0, 2),
            Node::Cmux(34, 0, 6),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 3, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 2, 0),
            Node::None,
            Node::Cmux(32, 0, 5),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        7,
    )),
    AnyBitCircuit::B6(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(2, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Copy,
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 0, 1),
            Node::Cmux(36, 0, 4),
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 0, 5),
            Node::Cmux(36, 0, 7),
            Node::Cmux(36, 0, 2),
            Node::Copy,
            Node::Cmux(35, 0, 1),
            Node::Cmux(35, 0, 6),
            Node::Cmux(35, 0, 4),
            Node::Cmux(35, 0, 7),
            Node::Cmux(35, 0, 2),
            Node::Cmux(35, 0, 3),
            Node::Cmux(35, 0, 5),
            Node::None,
            Node::Cmux(34, 4, 6),
            Node::Cmux(34, 0, 3),
            Node::Cmux(34, 2, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 5, 7),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 2, 1),
            Node::None,
            Node::None,
            Node::Cmux(33, 3, 7),
            Node::None,
            Node::Cmux(32, 3, 6),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        8,
    )),
    AnyBitCircuit::B7(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(1, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Copy,
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 0, 5),
            Node::Cmux(36, 0, 1),
            Node::Cmux(36, 0, 8),
            Node::Cmux(36, 0, 2),
            Node::Cmux(36, 0, 4),
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 0, 7),
            Node::Cmux(35, 0, 3),
            Node::Cmux(35, 0, 6),
            Node::Cmux(35, 0, 2),
            Node::Cmux(35, 0, 8),
            Node::None,
            Node::Cmux(35, 0, 7),
            Node::Cmux(35, 0, 1),
            Node::Cmux(35, 0, 5),
            Node::Cmux(35, 0, 4),
            Node::Cmux(34, 5, 7),
            Node::Cmux(34, 6, 8),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 2, 3),
            Node::None,
            Node::None,
            Node::Cmux(34, 0, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 8, 1),
            Node::None,
            Node::Cmux(33, 0, 5),
            Node::None,
            Node::Cmux(32, 7, 5),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        9,
    )),
    AnyBitCircuit::B8(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(4, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Copy,
            Node::Cmux(36, 0, 1),
            Node::Cmux(36, 0, 5),
            Node::Cmux(36, 0, 9),
            Node::Cmux(36, 0, 7),
            Node::Cmux(36, 0, 4),
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 0, 2),
            Node::Cmux(36, 0, 8),
            Node::Cmux(35, 0, 7),
            Node::Cmux(35, 0, 5),
            Node::Cmux(35, 0, 6),
            Node::Cmux(35, 0, 2),
            Node::None,
            Node::Cmux(35, 0, 4),
            Node::Cmux(35, 0, 8),
            Node::None,
            Node::Cmux(35, 0, 1),
            Node::Cmux(35, 3, 9),
            Node::Cmux(34, 8, 9),
            Node::Cmux(34, 3, 5),
            Node::Cmux(34, 2, 0),
            Node::None,
            Node::Cmux(34, 1, 6),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 4, 1),
            Node::Cmux(33, 2, 0),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 2, 3),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        10,
    )),
    AnyBitCircuit::B9(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(4, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Copy,
            Node::Cmux(36, 0, 2),
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 0, 10),
            Node::Cmux(36, 0, 9),
            Node::Cmux(36, 0, 8),
            Node::Cmux(36, 0, 1),
            Node::Cmux(36, 0, 4),
            Node::Cmux(36, 0, 5),
            Node::Cmux(36, 0, 7),
            Node::Cmux(35, 6, 8),
            Node::None,
            Node::Cmux(35, 0, 9),
            Node::Cmux(35, 0, 7),
            Node::None,
            Node::Cmux(35, 0, 2),
            Node::Cmux(35, 0, 4),
            Node::None,
            Node::Cmux(35, 0, 10),
            Node::Cmux(35, 0, 5),
            Node::Cmux(35, 3, 1),
            Node::Cmux(34, 2, 9),
            Node::Cmux(34, 6, 10),
            Node::Cmux(34, 5, 8),
            Node::Cmux(34, 3, 0),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 0, 3),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 2, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 2, 6),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        11,
    )),
    AnyBitCircuit::B10(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(1, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Copy,
            Node::Cmux(36, 0, 4),
            Node::Cmux(36, 0, 8),
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 0, 5),
            Node::Cmux(36, 0, 11),
            Node::Cmux(36, 0, 9),
            Node::Cmux(36, 0, 7),
            Node::Cmux(36, 0, 1),
            Node::Cmux(36, 0, 2),
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 0, 10),
            Node::Cmux(35, 8, 9),
            Node::Cmux(35, 3, 1),
            Node::Cmux(35, 0, 5),
            Node::Cmux(35, 0, 11),
            Node::Cmux(35, 0, 7),
            Node::Cmux(35, 6, 2),
            Node::Cmux(35, 0, 10),
            Node::Cmux(35, 0, 4),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 3, 0),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 7, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 4, 6),
            Node::Cmux(34, 2, 5),
            Node::None,
            Node::Cmux(33, 10, 1),
            Node::Cmux(33, 5, 11),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 1, 2),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        12,
    )),
    AnyBitCircuit::B11(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(6, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Copy,
            Node::Cmux(36, 0, 7),
            Node::Cmux(36, 0, 2),
            Node::Cmux(36, 0, 11),
            Node::Cmux(36, 0, 5),
            Node::Cmux(36, 0, 1),
            Node::Cmux(36, 0, 9),
            Node::Cmux(36, 0, 10),
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 0, 8),
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 0, 12),
            Node::Cmux(36, 0, 4),
            Node::None,
            Node::Cmux(35, 0, 4),
            Node::None,
            Node::Cmux(35, 0, 5),
            Node::None,
            Node::Cmux(35, 8, 9),
            Node::None,
            Node::Cmux(35, 10, 6),
            Node::Cmux(35, 0, 3),
            Node::Cmux(35, 1, 2),
            Node::None,
            Node::Cmux(35, 0, 7),
            Node::Cmux(35, 12, 11),
            Node::None,
            Node::None,
            Node::Cmux(34, 8, 12),
            Node::None,
            Node::None,
            Node::Cmux(34, 1, 7),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 3, 9),
            Node::Cmux(34, 11, 5),
            Node::None,
            Node::Cmux(33, 5, 2),
            Node::None,
            Node::Cmux(33, 12, 11),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 3, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        13,
    )),
    AnyBitCircuit::B12(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(8, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(12, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Copy,
            Node::Cmux(36, 0, 2),
            Node::Cmux(36, 0, 5),
            Node::Cmux(36, 0, 11),
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 0, 8),
            Node::Cmux(36, 0, 12),
            Node::Cmux(36, 0, 10),
            Node::Cmux(36, 0, 13),
            Node::Cmux(36, 0, 7),
            Node::Cmux(36, 0, 9),
            Node::Cmux(36, 0, 4),
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 0, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 0, 2),
            Node::Cmux(35, 7, 13),
            Node::Cmux(35, 11, 4),
            Node::Cmux(35, 1, 9),
            Node::None,
            Node::None,
            Node::Cmux(35, 12, 3),
            Node::Cmux(35, 6, 8),
            Node::Cmux(35, 0, 10),
            Node::Cmux(35, 0, 5),
            Node::None,
            Node::Cmux(34, 4, 11),
            Node::None,
            Node::None,
            Node::Cmux(34, 13, 10),
            Node::None,
            Node::None,
            Node::Cmux(34, 12, 7),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 5, 6),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 1, 13),
            Node::None,
            Node::None,
            Node::Cmux(33, 4, 7),
            Node::None,
            Node::None,
            Node::Cmux(32, 11, 8),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        14,
    )),
    AnyBitCircuit::B13(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(5, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(12, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Copy,
            Node::Cmux(36, 0, 13),
            Node::Cmux(36, 0, 1),
            Node::Cmux(36, 0, 8),
            Node::Cmux(36, 0, 2),
            Node::Cmux(36, 0, 7),
            Node::Cmux(36, 0, 12),
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 0, 10),
            Node::Cmux(36, 0, 5),
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 0, 11),
            Node::Cmux(36, 0, 9),
            Node::Cmux(36, 0, 14),
            Node::Cmux(36, 0, 4),
            Node::Cmux(35, 6, 8),
            Node::None,
            Node::Cmux(35, 4, 13),
            Node::Cmux(35, 5, 14),
            Node::None,
            Node::None,
            Node::Cmux(35, 10, 11),
            Node::None,
            Node::None,
            Node::Cmux(35, 0, 12),
            Node::Cmux(35, 2, 1),
            Node::None,
            Node::Cmux(35, 3, 7),
            Node::None,
            Node::Cmux(35, 0, 9),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 9, 6),
            Node::Cmux(34, 14, 3),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 12, 0),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 2, 10),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 6, 10),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 5, 14),
            Node::Cmux(32, 7, 14),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        15,
    )),
    AnyBitCircuit::B14(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(12, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Copy,
            Node::Cmux(36, 0, 4),
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 0, 10),
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 0, 1),
            Node::Cmux(36, 0, 11),
            Node::Cmux(36, 0, 8),
            Node::Cmux(36, 0, 12),
            Node::Cmux(36, 0, 14),
            Node::Cmux(36, 0, 15),
            Node::Cmux(36, 0, 7),
            Node::Cmux(36, 0, 13),
            Node::Cmux(36, 0, 2),
            Node::Cmux(36, 0, 5),
            Node::Cmux(36, 0, 9),
            Node::None,
            Node::Cmux(35, 13, 5),
            Node::Cmux(35, 6, 10),
            Node::Cmux(35, 2, 12),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 7, 4),
            Node::Cmux(35, 11, 9),
            Node::None,
            Node::Cmux(35, 3, 1),
            Node::None,
            Node::None,
            Node::Cmux(35, 8, 15),
            Node::Cmux(35, 0, 14),
            Node::None,
            Node::None,
            Node::Cmux(34, 9, 2),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 11, 8),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 15, 3),
            Node::None,
            Node::None,
            Node::Cmux(34, 14, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 12, 6),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 15, 2),
            Node::Cmux(32, 6, 15),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        16,
    )),
    AnyBitCircuit::B15(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(12, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(15, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(36, 0, 9),
            Node::Cmux(36, 0, 7),
            Node::Cmux(36, 0, 15),
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 0, 4),
            Node::Cmux(36, 0, 11),
            Node::Cmux(36, 0, 16),
            Node::Cmux(36, 0, 5),
            Node::Cmux(36, 0, 13),
            Node::Cmux(36, 0, 8),
            Node::Cmux(36, 0, 2),
            Node::Cmux(36, 0, 10),
            Node::None,
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 0, 14),
            Node::Cmux(36, 0, 1),
            Node::Cmux(36, 0, 12),
            Node::None,
            Node::None,
            Node::Cmux(35, 11, 15),
            Node::None,
            Node::None,
            Node::Cmux(35, 8, 13),
            Node::None,
            Node::None,
            Node::Cmux(35, 1, 10),
            Node::Cmux(35, 14, 16),
            Node::None,
            Node::Cmux(35, 9, 7),
            Node::Cmux(35, 3, 4),
            Node::Cmux(35, 2, 6),
            Node::Cmux(35, 0, 5),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 12, 13),
            Node::Cmux(34, 8, 14),
            Node::None,
            Node::Cmux(34, 5, 11),
            Node::Cmux(34, 9, 2),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 5, 4),
            Node::None,
            Node::Cmux(33, 1, 2),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 1, 3),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        17,
    )),
    AnyBitCircuit::B16(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(2, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(12, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(16, 1, 0),
            Node::Cmux(15, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(36, 0, 16),
            Node::None,
            Node::Cmux(36, 0, 5),
            Node::Cmux(36, 0, 1),
            Node::Cmux(36, 0, 3),
            Node::None,
            Node::Cmux(36, 0, 15),
            Node::Cmux(36, 0, 4),
            Node::Cmux(36, 0, 10),
            Node::Cmux(36, 12, 13),
            Node::Cmux(36, 0, 8),
            Node::Cmux(36, 0, 17),
            Node::Cmux(36, 0, 14),
            Node::Cmux(36, 0, 2),
            Node::Cmux(36, 0, 7),
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 0, 9),
            Node::Cmux(36, 0, 11),
            Node::None,
            Node::Cmux(35, 8, 4),
            Node::None,
            Node::Cmux(35, 17, 9),
            Node::Cmux(35, 14, 12),
            Node::None,
            Node::None,
            Node::Cmux(35, 13, 0),
            Node::None,
            Node::Cmux(35, 3, 6),
            Node::None,
            Node::Cmux(35, 10, 2),
            Node::None,
            Node::None,
            Node::Cmux(35, 7, 16),
            Node::Cmux(35, 15, 11),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 14, 4),
            Node::None,
            Node::Cmux(34, 7, 15),
            Node::None,
            Node::None,
            Node::Cmux(34, 11, 3),
            Node::None,
            Node::Cmux(34, 9, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 11, 9),
            Node::Cmux(33, 16, 14),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 4, 5),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        18,
    )),
    AnyBitCircuit::B17(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(17, 1, 0),
            Node::Cmux(16, 1, 0),
            Node::Cmux(15, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(12, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(36, 0, 10),
            Node::Cmux(36, 0, 15),
            Node::Cmux(36, 0, 8),
            Node::Cmux(36, 0, 18),
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 0, 17),
            Node::Cmux(36, 0, 9),
            Node::Cmux(36, 0, 4),
            Node::Cmux(36, 0, 6),
            Node::None,
            Node::Cmux(36, 13, 1),
            Node::Cmux(36, 0, 5),
            Node::None,
            Node::None,
            Node::Cmux(36, 0, 14),
            Node::Cmux(36, 0, 16),
            Node::Cmux(36, 0, 12),
            Node::Cmux(36, 0, 7),
            Node::Cmux(36, 11, 2),
            Node::None,
            Node::None,
            Node::Cmux(35, 8, 17),
            Node::None,
            Node::None,
            Node::Cmux(35, 11, 4),
            Node::Cmux(35, 3, 18),
            Node::None,
            Node::None,
            Node::Cmux(35, 1, 16),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 6, 0),
            Node::Cmux(35, 7, 15),
            Node::Cmux(35, 5, 14),
            Node::None,
            Node::Cmux(35, 2, 10),
            Node::Cmux(34, 2, 5),
            Node::Cmux(34, 14, 6),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 16, 15),
            Node::Cmux(34, 9, 18),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 0, 10),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 9, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 15, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        19,
    )),
    AnyBitCircuit::B18(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(10, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(15, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(17, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(16, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(18, 1, 0),
            Node::Cmux(12, 1, 0),
            Node::Cmux(36, 0, 14),
            Node::Cmux(36, 0, 16),
            Node::Cmux(36, 8, 5),
            Node::None,
            Node::Cmux(36, 0, 4),
            Node::Cmux(36, 0, 17),
            Node::None,
            Node::Cmux(36, 0, 19),
            Node::None,
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 2, 15),
            Node::Cmux(36, 0, 7),
            Node::Cmux(36, 0, 10),
            Node::None,
            Node::Cmux(36, 0, 12),
            Node::Cmux(36, 13, 18),
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 0, 1),
            Node::Cmux(36, 0, 11),
            Node::Cmux(36, 0, 9),
            Node::Cmux(35, 17, 15),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 1, 5),
            Node::Cmux(35, 14, 2),
            Node::Cmux(35, 0, 16),
            Node::Cmux(35, 18, 7),
            Node::None,
            Node::None,
            Node::Cmux(35, 9, 19),
            Node::None,
            Node::None,
            Node::Cmux(35, 12, 10),
            Node::Cmux(35, 4, 11),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 9, 15),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 6, 7),
            Node::None,
            Node::None,
            Node::Cmux(34, 16, 0),
            Node::Cmux(34, 12, 8),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 3, 10),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 11, 7),
            Node::None,
            Node::Cmux(32, 18, 9),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        20,
    )),
    AnyBitCircuit::B19(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(4, 1, 0),
            Node::Cmux(18, 1, 0),
            Node::Cmux(16, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(17, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(12, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(15, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(19, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(36, 0, 4),
            Node::Cmux(36, 0, 15),
            Node::None,
            Node::None,
            Node::Cmux(36, 10, 3),
            Node::Cmux(36, 0, 11),
            Node::Cmux(36, 0, 1),
            Node::Cmux(36, 0, 19),
            Node::Cmux(36, 0, 8),
            Node::Cmux(36, 0, 20),
            Node::None,
            Node::Cmux(36, 18, 2),
            Node::Cmux(36, 0, 12),
            Node::Cmux(36, 13, 5),
            Node::None,
            Node::Cmux(36, 0, 16),
            Node::Cmux(36, 0, 7),
            Node::None,
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 0, 9),
            Node::Cmux(36, 14, 17),
            Node::None,
            Node::None,
            Node::Cmux(35, 6, 12),
            Node::Cmux(35, 8, 16),
            Node::None,
            Node::None,
            Node::Cmux(35, 9, 18),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 19, 1),
            Node::Cmux(35, 0, 11),
            Node::None,
            Node::None,
            Node::Cmux(35, 15, 13),
            Node::Cmux(35, 7, 20),
            Node::None,
            Node::Cmux(35, 5, 4),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 6, 14),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 2, 20),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 3, 17),
            Node::None,
            Node::Cmux(34, 13, 18),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 11, 3),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 16, 18),
            Node::None,
            Node::Cmux(32, 4, 19),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        21,
    )),
    AnyBitCircuit::B20(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(19, 1, 0),
            Node::Cmux(20, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(15, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(16, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(18, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(12, 1, 0),
            Node::Cmux(17, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(36, 0, 18),
            Node::Cmux(36, 7, 2),
            Node::None,
            Node::Cmux(36, 0, 13),
            Node::Cmux(36, 0, 12),
            Node::Cmux(36, 21, 19),
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 0, 4),
            Node::None,
            Node::None,
            Node::Cmux(36, 0, 11),
            Node::Cmux(36, 14, 9),
            Node::Cmux(36, 20, 1),
            Node::Cmux(36, 0, 6),
            Node::None,
            Node::Cmux(36, 0, 8),
            Node::None,
            Node::Cmux(36, 0, 15),
            Node::None,
            Node::Cmux(36, 5, 16),
            Node::Cmux(36, 0, 17),
            Node::Cmux(36, 0, 10),
            Node::None,
            Node::None,
            Node::Cmux(35, 10, 17),
            Node::None,
            Node::None,
            Node::Cmux(35, 20, 21),
            Node::None,
            Node::Cmux(35, 7, 19),
            Node::None,
            Node::None,
            Node::Cmux(35, 15, 12),
            Node::None,
            Node::Cmux(35, 4, 11),
            Node::None,
            Node::None,
            Node::Cmux(35, 3, 13),
            Node::Cmux(35, 6, 5),
            Node::Cmux(35, 0, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 2, 16),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 12, 17),
            Node::Cmux(34, 15, 10),
            Node::None,
            Node::Cmux(34, 5, 7),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 21, 18),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 14, 19),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 8, 3),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        22,
    )),
    AnyBitCircuit::B21(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(0, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(15, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(17, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(18, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(20, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(21, 1, 0),
            Node::Cmux(19, 1, 0),
            Node::Cmux(12, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(16, 1, 0),
            Node::Cmux(36, 4, 19),
            Node::None,
            Node::Cmux(36, 21, 5),
            Node::Cmux(36, 0, 8),
            Node::Cmux(36, 0, 2),
            Node::Cmux(36, 17, 18),
            Node::None,
            Node::Cmux(36, 10, 11),
            Node::None,
            Node::Cmux(36, 0, 3),
            Node::None,
            Node::Cmux(36, 0, 14),
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 0, 20),
            Node::None,
            Node::None,
            Node::Cmux(36, 0, 15),
            Node::Cmux(36, 0, 7),
            Node::None,
            Node::Cmux(36, 9, 13),
            Node::Cmux(36, 1, 22),
            Node::Cmux(36, 0, 12),
            Node::Cmux(36, 0, 16),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 3, 5),
            Node::Cmux(35, 17, 12),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 13, 19),
            Node::None,
            Node::None,
            Node::Cmux(35, 21, 9),
            Node::None,
            Node::None,
            Node::Cmux(35, 22, 0),
            Node::Cmux(35, 16, 7),
            Node::None,
            Node::None,
            Node::Cmux(35, 4, 20),
            Node::None,
            Node::Cmux(35, 11, 2),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 19, 9),
            Node::None,
            Node::None,
            Node::Cmux(34, 12, 15),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 21, 3),
            Node::None,
            Node::Cmux(34, 4, 16),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 11, 16),
            Node::Cmux(33, 18, 8),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 2, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        23,
    )),
    AnyBitCircuit::B22(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(12, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(19, 1, 0),
            Node::Cmux(21, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(15, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(16, 1, 0),
            Node::Cmux(17, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(18, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(20, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(22, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(36, 0, 1),
            Node::Cmux(36, 0, 22),
            Node::Cmux(36, 0, 16),
            Node::Cmux(36, 0, 12),
            Node::Cmux(36, 0, 14),
            Node::None,
            Node::Cmux(36, 0, 18),
            Node::Cmux(36, 5, 15),
            Node::Cmux(36, 23, 9),
            Node::Cmux(36, 10, 8),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(36, 7, 3),
            Node::None,
            Node::None,
            Node::Cmux(36, 13, 11),
            Node::None,
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 0, 20),
            Node::Cmux(36, 21, 4),
            Node::None,
            Node::Cmux(36, 0, 2),
            Node::Cmux(36, 17, 19),
            Node::Cmux(35, 6, 18),
            Node::Cmux(35, 19, 13),
            Node::Cmux(35, 2, 9),
            Node::Cmux(35, 3, 8),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 1, 23),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 4, 16),
            Node::None,
            Node::Cmux(35, 0, 7),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 22, 20),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 3, 17),
            Node::Cmux(34, 11, 7),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 2, 13),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 0, 1),
            Node::None,
            Node::None,
            Node::Cmux(33, 14, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 22, 0),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 18, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        24,
    )),
    AnyBitCircuit::B23(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(2, 1, 0),
            Node::Cmux(23, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(16, 1, 0),
            Node::Cmux(22, 1, 0),
            Node::Cmux(20, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(19, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(18, 1, 0),
            Node::Cmux(12, 1, 0),
            Node::Cmux(17, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(15, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(21, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::None,
            Node::None,
            Node::Cmux(36, 0, 18),
            Node::None,
            Node::Cmux(36, 20, 9),
            Node::None,
            Node::Cmux(36, 22, 8),
            Node::None,
            Node::None,
            Node::Cmux(36, 0, 17),
            Node::Cmux(36, 24, 2),
            Node::None,
            Node::Cmux(36, 0, 19),
            Node::Cmux(36, 1, 14),
            Node::Cmux(36, 0, 13),
            Node::None,
            Node::Cmux(36, 0, 12),
            Node::Cmux(36, 0, 4),
            Node::Cmux(36, 5, 11),
            Node::Cmux(36, 10, 16),
            Node::Cmux(36, 21, 23),
            Node::None,
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 0, 15),
            Node::Cmux(36, 3, 7),
            Node::Cmux(35, 22, 24),
            Node::None,
            Node::None,
            Node::Cmux(35, 14, 13),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 12, 10),
            Node::Cmux(35, 9, 6),
            Node::None,
            Node::None,
            Node::Cmux(35, 23, 4),
            Node::None,
            Node::Cmux(35, 2, 18),
            Node::Cmux(35, 16, 19),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 17, 20),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 14, 22),
            Node::Cmux(34, 13, 7),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 0, 11),
            Node::None,
            Node::None,
            Node::Cmux(34, 3, 8),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 19, 22),
            Node::Cmux(33, 14, 15),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 5, 6),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        25,
    )),
    AnyBitCircuit::B24(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(9, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(22, 1, 0),
            Node::Cmux(16, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(19, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(24, 1, 0),
            Node::Cmux(15, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(18, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(23, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(21, 1, 0),
            Node::Cmux(12, 1, 0),
            Node::Cmux(17, 1, 0),
            Node::Cmux(20, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(36, 0, 18),
            Node::None,
            Node::Cmux(36, 5, 15),
            Node::Cmux(36, 11, 7),
            Node::Cmux(36, 0, 4),
            Node::Cmux(36, 0, 24),
            Node::None,
            Node::Cmux(36, 9, 22),
            Node::Cmux(36, 0, 13),
            Node::Cmux(36, 8, 21),
            Node::Cmux(36, 16, 17),
            Node::Cmux(36, 3, 19),
            Node::Cmux(36, 25, 6),
            Node::Cmux(36, 0, 20),
            Node::None,
            Node::Cmux(36, 2, 12),
            Node::None,
            Node::None,
            Node::Cmux(36, 0, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(36, 23, 10),
            Node::None,
            Node::Cmux(36, 0, 14),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 25, 11),
            Node::None,
            Node::Cmux(35, 4, 23),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 0, 2),
            Node::None,
            Node::None,
            Node::Cmux(35, 18, 9),
            Node::None,
            Node::Cmux(35, 5, 12),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 3, 15),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 13, 7),
            Node::Cmux(35, 8, 10),
            Node::None,
            Node::None,
            Node::Cmux(34, 12, 3),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 5, 24),
            Node::Cmux(34, 23, 19),
            Node::None,
            Node::Cmux(34, 9, 14),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 14, 12),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 1, 11),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 12, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        26,
    )),
    AnyBitCircuit::B25(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(5, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Cmux(18, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(12, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(16, 1, 0),
            Node::Cmux(22, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(23, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(21, 1, 0),
            Node::Cmux(24, 1, 0),
            Node::Cmux(15, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(17, 1, 0),
            Node::Cmux(20, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(25, 1, 0),
            Node::Cmux(19, 1, 0),
            Node::None,
            Node::Cmux(36, 0, 7),
            Node::Cmux(36, 23, 9),
            Node::Cmux(36, 0, 10),
            Node::Cmux(36, 1, 13),
            Node::None,
            Node::Cmux(36, 24, 11),
            Node::Cmux(36, 21, 14),
            Node::Cmux(36, 0, 20),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(36, 16, 8),
            Node::None,
            Node::Cmux(36, 0, 15),
            Node::Cmux(36, 0, 3),
            Node::Cmux(36, 2, 18),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(36, 17, 26),
            Node::Cmux(36, 0, 6),
            Node::Cmux(36, 22, 25),
            Node::None,
            Node::Cmux(36, 5, 4),
            Node::Cmux(36, 12, 19),
            Node::None,
            Node::None,
            Node::Cmux(35, 16, 23),
            Node::None,
            Node::Cmux(35, 8, 21),
            Node::Cmux(35, 3, 25),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 15, 2),
            Node::None,
            Node::Cmux(35, 1, 4),
            Node::None,
            Node::None,
            Node::Cmux(35, 12, 7),
            Node::None,
            Node::Cmux(35, 14, 6),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 22, 26),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 4, 16),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 5, 9),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 11, 2),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 24, 14),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 5, 17),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 13, 24),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 16, 7),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        27,
    )),
    AnyBitCircuit::B26(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(4, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(25, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(21, 1, 0),
            Node::Cmux(20, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(18, 1, 0),
            Node::Cmux(12, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(23, 1, 0),
            Node::Cmux(26, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(16, 1, 0),
            Node::Cmux(22, 1, 0),
            Node::Cmux(17, 1, 0),
            Node::Cmux(15, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(24, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(19, 1, 0),
            Node::Cmux(36, 19, 16),
            Node::None,
            Node::Cmux(36, 0, 14),
            Node::Cmux(36, 6, 20),
            Node::Cmux(36, 1, 10),
            Node::None,
            Node::Cmux(36, 0, 5),
            Node::Cmux(36, 15, 25),
            Node::Cmux(36, 0, 23),
            Node::Cmux(36, 0, 18),
            Node::Cmux(36, 8, 13),
            Node::Cmux(36, 2, 17),
            Node::Cmux(36, 26, 27),
            Node::None,
            Node::Cmux(36, 3, 9),
            Node::Cmux(36, 24, 22),
            Node::None,
            Node::Cmux(36, 0, 7),
            Node::Cmux(36, 11, 4),
            Node::Cmux(36, 12, 21),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 8, 0),
            Node::None,
            Node::None,
            Node::Cmux(35, 6, 19),
            Node::Cmux(35, 15, 18),
            Node::None,
            Node::None,
            Node::Cmux(35, 9, 12),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 10, 11),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 2, 4),
            Node::Cmux(35, 3, 7),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 17, 14),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 20, 21),
            Node::None,
            Node::Cmux(34, 25, 6),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 5, 16),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 9, 2),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 8, 16),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 22, 10),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 6, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        28,
    )),
    AnyBitCircuit::B27(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(5, 1, 0),
            Node::Cmux(25, 1, 0),
            Node::Cmux(16, 1, 0),
            Node::Cmux(26, 1, 0),
            Node::Cmux(17, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(22, 1, 0),
            Node::Cmux(18, 1, 0),
            Node::Cmux(23, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(15, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(19, 1, 0),
            Node::Cmux(21, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Cmux(27, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(24, 1, 0),
            Node::Cmux(12, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(20, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(36, 0, 20),
            Node::Cmux(36, 13, 2),
            Node::None,
            Node::Cmux(36, 22, 27),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(36, 0, 14),
            Node::None,
            Node::Cmux(36, 26, 3),
            Node::Cmux(36, 9, 11),
            Node::Cmux(36, 28, 12),
            Node::None,
            Node::None,
            Node::Cmux(36, 15, 4),
            Node::None,
            Node::Cmux(36, 8, 24),
            Node::None,
            Node::None,
            Node::Cmux(36, 23, 18),
            Node::Cmux(36, 0, 25),
            Node::Cmux(36, 6, 5),
            Node::Cmux(36, 7, 21),
            Node::None,
            Node::None,
            Node::Cmux(36, 0, 17),
            Node::None,
            Node::Cmux(36, 1, 19),
            Node::Cmux(36, 16, 10),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 20, 3),
            Node::Cmux(35, 9, 16),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 10, 14),
            Node::Cmux(35, 25, 27),
            Node::Cmux(35, 7, 11),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 0, 28),
            Node::Cmux(35, 19, 22),
            Node::None,
            Node::Cmux(35, 21, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 19, 27),
            Node::Cmux(34, 7, 8),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 24, 18),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 20, 25),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 9, 17),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 8, 28),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 16, 20),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        29,
    )),
    AnyBitCircuit::B28(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(4, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(23, 1, 0),
            Node::Cmux(20, 1, 0),
            Node::Cmux(28, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(15, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(17, 1, 0),
            Node::Cmux(25, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(26, 1, 0),
            Node::Cmux(18, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(21, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(27, 1, 0),
            Node::Cmux(22, 1, 0),
            Node::Cmux(24, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(12, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(19, 1, 0),
            Node::Cmux(16, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(36, 1, 4),
            Node::Cmux(36, 14, 28),
            Node::None,
            Node::Cmux(36, 6, 12),
            Node::Cmux(36, 24, 19),
            Node::Cmux(36, 0, 10),
            Node::Cmux(36, 18, 22),
            Node::None,
            Node::None,
            Node::Cmux(36, 26, 21),
            Node::Cmux(36, 0, 11),
            Node::Cmux(36, 8, 16),
            Node::Cmux(36, 7, 15),
            Node::None,
            Node::None,
            Node::Cmux(36, 2, 3),
            Node::Cmux(36, 29, 13),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(36, 25, 5),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(36, 17, 27),
            Node::Cmux(36, 0, 9),
            Node::None,
            Node::None,
            Node::Cmux(36, 20, 23),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 0, 20),
            Node::Cmux(35, 24, 9),
            Node::None,
            Node::None,
            Node::Cmux(35, 3, 16),
            Node::None,
            Node::Cmux(35, 25, 15),
            Node::Cmux(35, 10, 4),
            Node::None,
            Node::Cmux(35, 1, 28),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 11, 12),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 5, 6),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 28, 20),
            Node::None,
            Node::Cmux(34, 13, 4),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 11, 8),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 10, 5),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 2, 4),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 12, 19),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 24, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        30,
    )),
    AnyBitCircuit::B29(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(18, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(29, 1, 0),
            Node::Cmux(16, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Cmux(24, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(21, 1, 0),
            Node::Cmux(28, 1, 0),
            Node::Cmux(27, 1, 0),
            Node::Cmux(26, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(25, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(22, 1, 0),
            Node::Cmux(12, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(20, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(15, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(19, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(23, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(17, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(36, 21, 1),
            Node::None,
            Node::None,
            Node::Cmux(36, 3, 26),
            Node::Cmux(36, 18, 11),
            Node::None,
            Node::None,
            Node::Cmux(36, 30, 10),
            Node::Cmux(36, 16, 15),
            Node::None,
            Node::None,
            Node::Cmux(36, 25, 13),
            Node::Cmux(36, 0, 22),
            Node::Cmux(36, 14, 17),
            Node::None,
            Node::Cmux(36, 0, 7),
            Node::None,
            Node::None,
            Node::Cmux(36, 2, 5),
            Node::Cmux(36, 27, 24),
            Node::Cmux(36, 9, 20),
            Node::None,
            Node::Cmux(36, 19, 4),
            Node::Cmux(36, 23, 29),
            Node::None,
            Node::Cmux(36, 6, 12),
            Node::Cmux(36, 28, 8),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 15, 13),
            Node::None,
            Node::Cmux(35, 12, 3),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 23, 8),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 0, 11),
            Node::Cmux(35, 19, 25),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 20, 4),
            Node::Cmux(35, 7, 22),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 18, 26),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 22, 17),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 3, 13),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 7, 18),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 1, 12),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 14, 24),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 29, 9),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 15, 2),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        31,
    )),
    AnyBitCircuit::B30(BitCircuit::new(
        [
            Node::Copy,
            Node::Cmux(13, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(24, 1, 0),
            Node::Cmux(15, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(18, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(29, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(17, 1, 0),
            Node::Cmux(16, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(27, 1, 0),
            Node::Cmux(23, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(25, 1, 0),
            Node::Cmux(19, 1, 0),
            Node::Cmux(28, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Cmux(21, 1, 0),
            Node::Cmux(20, 1, 0),
            Node::Cmux(22, 1, 0),
            Node::Cmux(12, 1, 0),
            Node::Cmux(6, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(26, 1, 0),
            Node::Cmux(30, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(36, 20, 3),
            Node::Cmux(36, 22, 30),
            Node::Cmux(36, 16, 29),
            Node::Cmux(36, 5, 17),
            Node::None,
            Node::None,
            Node::Cmux(36, 2, 18),
            Node::Cmux(36, 8, 23),
            Node::None,
            Node::None,
            Node::Cmux(36, 7, 12),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(36, 27, 25),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(36, 0, 4),
            Node::None,
            Node::None,
            Node::Cmux(36, 1, 9),
            Node::None,
            Node::None,
            Node::Cmux(36, 31, 11),
            Node::Cmux(36, 21, 6),
            Node::Cmux(36, 13, 24),
            Node::Cmux(36, 10, 14),
            Node::None,
            Node::Cmux(36, 26, 19),
            Node::Cmux(36, 28, 15),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 27, 30),
            Node::None,
            Node::Cmux(35, 19, 31),
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 6, 28),
            Node::None,
            Node::Cmux(35, 15, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 7, 22),
            Node::Cmux(35, 26, 2),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 25, 3),
            Node::Cmux(35, 10, 0),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 25, 17),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 11, 15),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 30, 24),
            Node::None,
            Node::None,
            Node::Cmux(34, 31, 9),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 20, 26),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 29, 8),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 8, 20),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        32,
    )),
    AnyBitCircuit::B31(BitCircuit::new(
        [
            Node::Cmux(6, 1, 0),
            Node::Cmux(18, 1, 0),
            Node::Cmux(0, 1, 0),
            Node::Cmux(28, 1, 0),
            Node::Cmux(27, 1, 0),
            Node::Cmux(12, 1, 0),
            Node::Cmux(30, 1, 0),
            Node::Cmux(31, 1, 0),
            Node::Cmux(19, 1, 0),
            Node::Cmux(4, 1, 0),
            Node::Cmux(3, 1, 0),
            Node::Cmux(2, 1, 0),
            Node::Cmux(22, 1, 0),
            Node::Cmux(5, 1, 0),
            Node::Cmux(1, 1, 0),
            Node::Cmux(17, 1, 0),
            Node::Cmux(21, 1, 0),
            Node::Cmux(7, 1, 0),
            Node::Cmux(29, 1, 0),
            Node::Cmux(15, 1, 0),
            Node::Cmux(9, 1, 0),
            Node::Cmux(16, 1, 0),
            Node::Cmux(13, 1, 0),
            Node::Cmux(25, 1, 0),
            Node::Cmux(11, 1, 0),
            Node::Cmux(14, 1, 0),
            Node::Cmux(8, 1, 0),
            Node::Cmux(24, 1, 0),
            Node::Cmux(26, 1, 0),
            Node::Cmux(20, 1, 0),
            Node::Cmux(10, 1, 0),
            Node::Cmux(23, 1, 0),
            Node::Cmux(36, 17, 31),
            Node::Cmux(36, 22, 18),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(36, 11, 1),
            Node::Cmux(36, 30, 28),
            Node::None,
            Node::None,
            Node::Cmux(36, 20, 23),
            Node::Cmux(36, 9, 29),
            Node::Cmux(36, 24, 4),
            Node::Cmux(36, 19, 7),
            Node::None,
            Node::Cmux(36, 13, 16),
            Node::None,
            Node::Cmux(36, 5, 3),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(36, 26, 27),
            Node::None,
            Node::Cmux(36, 2, 21),
            Node::Cmux(36, 0, 12),
            Node::None,
            Node::Cmux(36, 14, 15),
            Node::Cmux(36, 25, 6),
            Node::Cmux(36, 10, 8),
            Node::None,
            Node::Cmux(35, 13, 19),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 31, 14),
            Node::Cmux(35, 26, 24),
            Node::None,
            Node::None,
            Node::Cmux(35, 17, 1),
            Node::None,
            Node::None,
            Node::Cmux(35, 27, 30),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 8, 9),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(35, 0, 15),
            Node::None,
            Node::None,
            Node::Cmux(35, 29, 12),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 28, 11),
            Node::None,
            Node::Cmux(34, 7, 25),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 8, 1),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(34, 19, 14),
            Node::None,
            Node::Cmux(33, 23, 31),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(33, 4, 6),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::Cmux(32, 1, 7),
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
            Node::None,
        ],
        32,
    )),
]);
