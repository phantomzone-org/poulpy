use crate::tfhe::arithmetic::{BitCircuit, Circuit, Node};

pub(crate) static OUTPUT_CIRCUIT: Circuit<BitCircuit<97usize, 65usize>, 1> = Circuit([BitCircuit::new(
    [
        Node::new(0, 0, 0),
        Node::new(0, 0, 0),
        Node::new(32, 1, 0),
        Node::new(0, 0, 2),
        Node::new(33, 1, 3),
        Node::new(33, 3, 0),
        Node::new(1, 5, 4),
        Node::new(34, 1, 6),
        Node::new(34, 6, 0),
        Node::new(2, 8, 7),
        Node::new(35, 9, 0),
        Node::new(35, 1, 9),
        Node::new(3, 10, 11),
        Node::new(36, 1, 12),
        Node::new(36, 12, 0),
        Node::new(4, 14, 13),
        Node::new(37, 1, 15),
        Node::new(37, 15, 0),
        Node::new(5, 17, 16),
        Node::new(38, 1, 18),
        Node::new(38, 18, 0),
        Node::new(6, 20, 19),
        Node::new(39, 21, 0),
        Node::new(39, 1, 21),
        Node::new(7, 22, 23),
        Node::new(40, 1, 24),
        Node::new(40, 24, 0),
        Node::new(8, 26, 25),
        Node::new(41, 27, 0),
        Node::new(41, 1, 27),
        Node::new(9, 28, 29),
        Node::new(42, 30, 0),
        Node::new(42, 1, 30),
        Node::new(10, 31, 32),
        Node::new(43, 33, 0),
        Node::new(43, 1, 33),
        Node::new(11, 34, 35),
        Node::new(44, 36, 0),
        Node::new(44, 1, 36),
        Node::new(12, 37, 38),
        Node::new(45, 1, 39),
        Node::new(45, 39, 0),
        Node::new(13, 41, 40),
        Node::new(46, 42, 0),
        Node::new(46, 1, 42),
        Node::new(14, 43, 44),
        Node::new(47, 45, 0),
        Node::new(47, 1, 45),
        Node::new(15, 46, 47),
        Node::new(48, 1, 48),
        Node::new(48, 48, 0),
        Node::new(16, 50, 49),
        Node::new(49, 51, 0),
        Node::new(49, 1, 51),
        Node::new(17, 52, 53),
        Node::new(50, 54, 0),
        Node::new(50, 1, 54),
        Node::new(18, 55, 56),
        Node::new(51, 1, 57),
        Node::new(51, 57, 0),
        Node::new(19, 59, 58),
        Node::new(52, 60, 0),
        Node::new(52, 1, 60),
        Node::new(20, 61, 62),
        Node::new(53, 1, 63),
        Node::new(53, 63, 0),
        Node::new(21, 65, 64),
        Node::new(54, 66, 0),
        Node::new(54, 1, 66),
        Node::new(22, 67, 68),
        Node::new(55, 1, 69),
        Node::new(55, 69, 0),
        Node::new(23, 71, 70),
        Node::new(56, 1, 72),
        Node::new(56, 72, 0),
        Node::new(24, 74, 73),
        Node::new(57, 1, 75),
        Node::new(57, 75, 0),
        Node::new(25, 77, 76),
        Node::new(58, 78, 0),
        Node::new(58, 1, 78),
        Node::new(26, 79, 80),
        Node::new(59, 81, 0),
        Node::new(59, 1, 81),
        Node::new(27, 82, 83),
        Node::new(60, 84, 0),
        Node::new(60, 1, 84),
        Node::new(28, 85, 86),
        Node::new(61, 1, 87),
        Node::new(61, 87, 0),
        Node::new(29, 89, 88),
        Node::new(62, 90, 0),
        Node::new(62, 1, 90),
        Node::new(30, 91, 92),
        Node::new(63, 0, 93),
        Node::new(63, 93, 1),
        Node::new(31, 95, 94),
    ],
    [
        2, 3, 4, 6, 7, 9, 10, 12, 13, 15, 16, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 37, 39, 40, 42, 43, 45, 46, 48,
        49, 51, 52, 54, 55, 57, 58, 60, 61, 63, 64, 66, 67, 69, 70, 72, 73, 75, 76, 78, 79, 81, 82, 84, 85, 87, 88, 90, 91, 93,
        94, 96, 97,
    ],
)]);
